# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Default path will just redirect to the payment list
GET     /                           controllers.Application.index()
GET     /home         controllers.Application.listByLoginUserId(p:Int ?= 0, s ?= "paidDate", o ?= "desc")



# Authentication
GET     /login                              controllers.LoginApplication.login()
POST    /login                              controllers.LoginApplication.authenticate()
GET     /logout                             controllers.LoginApplication.logout()

# Payments list (look at the default values for pagination parameters)

POST    /payments/uploadFile       controllers.Application.uploadFile(paymentId:Long)
GET		/payments/artifacts/:id		controllers.Application.getPaymentArtifact(id:Long)
POST	/payments/artifacts/:id/delete		controllers.Application.deletePaymentArtifact(id:Long)

GET     /payments                  controllers.Application.list(p:Int ?= 0, s ?= "paidDate", o ?= "desc", f ?= "")
GET     /payments/users            controllers.Application.listByUserId(p:Int ?= 0, s ?= "paidDate", o ?= "desc", u:Long ?= 0)


# Add payment
#GET     /payments/new              controllers.Application.create()
GET		/payments/new2			   controllers.Application.create2()
#GET     /monthly_payments/new       controllers.Application.createMonthly()
GET     /monthly_payments/new2       controllers.Application.createMonthly2()


POST    /payments                  controllers.Application.save()
POST    /monthly_payments          controllers.Application.saveMonthly()

# Edit existing payment
GET     /payments/:id              controllers.Application.edit(id:Long)
POST    /payments/:id              controllers.Application.update(id:Long)

# Delete a payment
POST    /payments/:id/delete       controllers.Application.delete(id:Long)


GET     /api/payments              controllers.Application.apiList()
GET     /api/payments/:id          controllers.Application.apiGet(id:Long)
POST    /api/payments              controllers.Application.apiCreatePayment()
POST    /api/payments/:id          controllers.Application.apiUpdatePayment(id:Long)
POST    /api/monthly_payments      controllers.Application.apiCreateMonthlyPayment()
POST    /api/upload_payment_file/:id          controllers.Application.apiUploadFile(id:Long)
GET     /api/payments/:paymentId/artifacts    controllers.Application.apiPaymentArtifacts(paymentId:Long)
POST	/api/payments/artifacts/:id/delete	  controllers.Application.apiDeletePaymentArtifact(id:Long)





# PaymentTypes list (look at the default values for pagination parameters)
GET     /payment_types                  controllers.PaymentTypeApplication.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
# Add payment
GET     /payment_types/new              controllers.PaymentTypeApplication.create()
POST    /payment_types                  controllers.PaymentTypeApplication.save()
# Edit existing paymentType
GET     /payment_types/:id              controllers.PaymentTypeApplication.edit(id:Long)
POST    /payment_types/:id              controllers.PaymentTypeApplication.update(id:Long)
# Delete a paymentType
POST    /payment_types/:id/delete       controllers.PaymentTypeApplication.delete(id:Long)

GET		/api/payment_types				controllers.PaymentTypeApplication.apiList()

# Users list (look at the default values for pagination parameters)
GET     /users/loggedin_user_edit_profile		controllers.UserApplication.loggedInUserEditProfile()
POST    /users/loggedin_user_update_profile		controllers.UserApplication.loggedInUserUpdateProfile()
GET		/users/loggedin_user_change_password	controllers.UserApplication.loggedInUserChangePassword()
POST    /users/loggedin_user_update_password    controllers.UserApplication.loggedInUserUpdatePassword()
GET     /users                  controllers.UserApplication.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
# Add payment
GET     /users/new              controllers.UserApplication.create()
POST    /users                  controllers.UserApplication.save()
# Edit existing user
GET     /users/:id              controllers.UserApplication.edit(id:Long)
GET     /users/change_password/:id              controllers.UserApplication.changePassword(id:Long)
POST    /users/:id              controllers.UserApplication.update(id:Long)
POST    /users/change_password/:id              controllers.UserApplication.updatePassword(id:Long)
# Delete a user
POST    /users/:id/delete       controllers.UserApplication.delete(id:Long)
GET     /api/users              controllers.UserApplication.apiList()


# Roles list (look at the default values for pagination parameters)
GET     /roles                  controllers.RoleApplication.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
# Add payment
GET     /roles/new              controllers.RoleApplication.create()
POST    /roles                  controllers.RoleApplication.save()
# Edit existing role
GET     /roles/:id              controllers.RoleApplication.edit(id:Long)
POST    /roles/:id              controllers.RoleApplication.update(id:Long)
# Delete a role
POST    /roles/:id/delete       controllers.RoleApplication.delete(id:Long)


# Groups list (look at the default values for pagination parameters)
GET     /groups2	             controllers.GroupApplication.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /groups                  controllers.GroupApplication.listByAccess(p:Int ?= 0, s ?= "name", o ?= "asc")
# Add payment
GET     /groups/new              controllers.GroupApplication.create()
POST    /groups                  controllers.GroupApplication.save()
# Edit existing group
GET     /groups/:id              controllers.GroupApplication.edit(id:Long)
POST    /groups/:id              controllers.GroupApplication.update(id:Long)
# Delete a group
POST    /groups/:id/delete       controllers.GroupApplication.delete(id:Long)

GET    /groups/:id/members/:memberId   controllers.GroupApplication.apiGetMember(id:Long, memberId:Long)
POST    /groups/:id/members/add   controllers.GroupApplication.addMember(id:Long)
POST    /groups/:id/members/:memberId/delete   controllers.GroupApplication.removeMember(id:Long, memberId:Long)

POST    /groups/:id/members/:memberId/update   controllers.GroupApplication.apiUpdateMember(id:Long, memberId:Long)
GET		/groups/:groupId/members/:memberId/payments controllers.Application.getPayments(groupId:Long, memberId:Long, p:Int ?= 0, s ?= "name", o ?= "asc")

# Reports list (look at the default values for pagination parameters)
GET     /reports                  controllers.ReportApplication.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
# Add report
GET     /reports/new              controllers.ReportApplication.create()
POST    /reports                  controllers.ReportApplication.save()
# Edit existing report
GET     /reports/:id              controllers.ReportApplication.edit(id:Long)
POST    /reports/:id              controllers.ReportApplication.update(id:Long)
# Delete a report
POST    /reports/:id/delete       controllers.ReportApplication.delete(id:Long)

GET     /api/reports/:id/data     controllers.ReportApplication.apiReportData(id:Long)
GET     /api/reports/:id     controllers.ReportApplication.apiReport(id:Long)

GET     /queries              controllers.QueryApplication.index()
POST    /queries              controllers.QueryApplication.query()


# PaymentTemplates list (look at the default values for pagination parameters)
GET     /payment_templates                  controllers.PaymentTemplateApplication.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
# Add payment
GET     /payment_templates/new              controllers.PaymentTemplateApplication.create()
POST    /payment_templates                  controllers.PaymentTemplateApplication.save()
# Edit existing paymentTemplate
GET     /payment_templates/:id              controllers.PaymentTemplateApplication.edit(id:Long)
POST    /payment_templates/:id              controllers.PaymentTemplateApplication.update(id:Long)
# Delete a paymentTemplate
POST    /payment_templates/:id/delete       controllers.PaymentTemplateApplication.delete(id:Long)
GET     /api/payment_templates              controllers.PaymentTemplateApplication.apiList()


GET    /data_management                     controllers.DataManagementApplication.display()
GET    /data_management/execute             controllers.DataManagementApplication.execute()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

